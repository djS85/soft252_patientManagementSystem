/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.reflect.TypeToken;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import patientmanagementsystem.patient_system.Patient;
import patientmanagementsystem.patient_system.Patients;
import patientmanagementsystem.secretary_system.Secretary;
import utils.Files;

/**
 *
 * @author djs85
 */
public class SecApproveAccounts extends javax.swing.JPanel {

    /**
     * Creates new form SecApproveAccounts
     */
    
    private Gson gson;
    
    private SecretarySystemMain parent;
    private Secretary user;
    
    private Patients patients;
    
    public SecApproveAccounts(SecretarySystemMain _parent, Secretary _user) {
        this.gson = new GsonBuilder().setPrettyPrinting().create();
        this.user = _user;
        this.parent = _parent;
        this.patients = new Patients();
        initComponents();
        
        this.patients.setPatients(getPatients());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Approve Accounts");

        jButton1.setText("View Accounts");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Approve Accounts");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(154, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(0, 106, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        ArrayList<Patient> _patients = this.patients.getPatients();
        
        jTextArea1.setText("");
        
        if ( _patients.size() > 0 ) {
            for ( Patient p : _patients ) {
                jTextArea1.append("Patient Name : " + p.getFullName() + "\n"
                + "Patient ID : " + p.getUserID() + "\n"
                + "Address : " + p.getAddress() + "\n"
                + "Age : " + p.getAge() + "\n"
                + "Approved : " + p.isAccountApproved() + "\n\n");
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        for ( Patient p : this.patients.getPatients() ) {
            if ( !p.isAccountApproved() ) {
                p.setAccountApproved(true);
            }
        }
        
        writePatients(this.patients);
        
        ArrayList<Patient> _patients = this.patients.getPatients();
        
        jTextArea1.setText("");
        
        if ( _patients.size() > 0 ) {
            for ( Patient p : _patients ) {
                jTextArea1.append("Patient Name : " + p.getFullName() + "\n"
                + "Patient ID : " + p.getUserID() + "\n"
                + "Address : " + p.getAddress() + "\n"
                + "Age : " + p.getAge() + "\n"
                + "Approved : " + p.isAccountApproved() + "\n\n");
            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    public void writePatients(Patients patients) {
        // its all about the way this part is setup with filewriter/reader.
        try ( FileWriter fw = new FileWriter(Files.PATIENTS_PATH) ) {          
            gson.toJson(patients.getPatients(), fw);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    
    public ArrayList<Patient> getPatients() {
        
        ArrayList<Patient> _patients = new ArrayList<>();
        
        try ( FileReader fr = new FileReader(Files.PATIENTS_PATH) ) {
            _patients = gson.fromJson(fr, new TypeToken<ArrayList<Patient>>() {}.getType());
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        
        return _patients;
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
